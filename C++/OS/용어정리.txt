[플랫폼]
x64: 크기 2^64 = ?? 100만t
x86: 파일1개의 크기 2^32 = 4g  최대 메모리 4g -> 포인터의 최대크기 2^32 롱포인터(Lptr)
ARM:
ARM64:
ARM64EC:

[운영체제]
메세지: 동작을 전달하기 위한 약속. 
핸들러: 어떤것을 제어하기 위하여 약속된 것

콜백: 뒤(내가 모르는 곳)에서 부르다. 내가 호출하지않아도 불리는 함수. 
WinAPI: 콜백함수(WndProc)를 재정의하여 프로그램을 바꿔줄수있다.
메세지루프: 입력을 받기위해서 대기하며 반복처리를 수행한다.

[절차지향프로그래밍]
절차지향: 함수를 호출하여 변수의 값을 변경하는 것. 함수와 변수가 묶여있지않기때문에 둘다 알아야 사용이 가능하다.
포인터:
함수포인터: 함수의 주소를 가지는 변수.(매개변수와 리턴값이 같은 것만 가능)

[객체지향프로그래밍]
객체지향: 변수와 함수로 객체를 나타내어, 사용하기 편리하고 재활용가능한 코드를 제작하는 것.
ㄴ캡슐화: 변수와 함수를 묶어서 나타내는 것.
ㄴ은닉: 멤버에 접근하는 권한을 설정하는 것.(플레이어의 hp를 공격을 받지도 않았는데 0으로 만들수 없도록 함수를 만들어서 호출하는 것)
ㄴ상속: 기존에 생생되어있는 객체에 멤버를 선언하지않고 가져다 쓰면서 추가기능을 만들때 사용하는 것.(모노비헤이비어를 스크립트에서 상속받아서 필요한 객체를 멤버변수로 추가하고, 멤버함수로 상호작용하는 추가하는 것.)
ㄴ다형성: 어떤객체에 따라 모두 공통으로 필요하지만 다른동작을 하게 만들어야하는것.(게임오브젝트 스크립트의 유니티메세지 함수(start(),updata(),OnTrigger/CollisionEnter..)와 같은 것들)
가상함수: 부모함수에서 가상함수를 만들어, 자식함수에서 오버라이딩하는 것.
오버라이딩(재정의): 함수를 덮어 씌우는 것. 매개변수와 리턴값은 그대로 사용해야한다.
오버로딩: 같은 이름의 함수를 다른 매개변수로 여러개를 만드는 것.
델리게이트:

변수: 객체 (버튼객체)
함수(이벤트): 객체나 변수에 값을 변경하기위해서 함수가 필요함.(버튼객체의 텍스트를 지정된 텍스트로 변경한다)
이벤트: 일어난 일 (다른객체와 상호 작용이 일어남)

[보안]
백도어: 약속되지않은 방식으로 접근해서 정보를 빼가는 방법.
